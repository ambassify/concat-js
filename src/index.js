/**
 * concatter
 * This function is used to merge multiple classes generated by the BEMClassManager
 * We will also remove double classes
 * @return {string}
 */
'use strict';

(function (name, context, definition) {
    if (typeof module !== 'undefined' && module.exports) { module.exports = definition(); }
    else if (typeof define === 'function' && define.amd) { define([], definition); }
    else if (typeof exports === 'object' ) { exports = definition(); }
    else { context[name] = definition(); }
})('C', this, function () {

    function uniq(values, output) {
        var idx = values.length;
        var v = null;

        output = output || [];

        while( idx-- ) {
            v = values[idx];

            if( output.indexOf(v) < 0 )
                output.push(values[idx]);
        }

        return output;
    }

    return function C() {
        var idx = arguments.length;
        var classes = [];
        var c = null;

        while( idx-- ) {
            c = arguments[idx];

            if( c && typeof c === 'object' && typeof c.toString === 'function' &&
                c.toString !== Object.prototype.toString )
                c = c.toString();

            if( typeof c !== 'string' )
                continue;

            c = c.replace(/\s\s+/, ' ').split(' ');
            if( c.length == 1 && c[0].length == 0 )
                continue;

            classes = classes.concat(c);
        }

        classes = uniq(classes);

        return classes.join(' ');
    };
});
